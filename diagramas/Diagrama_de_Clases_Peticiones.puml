@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.sa.programacionaplicada.services.RegistrosController",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_3662 { 
   	label=sa
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_586165129 { 
   	label=programacionaplicada
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ConsultasController1654062064[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConsultasController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCuadrillaById(id: Long): Optional&lt;Cuadrilla&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEmpleadoById(id: Long): Optional&lt;Empleado&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEventoGastoById(id: Long): Optional&lt;EventoDeGasto&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEventosGastoByAny(idCuadrilla: Long, idEmpleado: Long, aprobado: Boolean): Iterable&lt;EventoDeGasto&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLocalidadById(id: Long): Optional&lt;Localidad&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSedeById(id: Long): Optional&lt;Sede&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RegistrosController1654062064[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RegistrosController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ CrearCuadrilla(newCuadrilla: Cuadrilla): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ CrearEmpleado(newEmpleado: Empleado): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ CrearEventoDeGasto(eventoDeGasto: EventoDeGasto): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ CrearLocalidad(localidad: Localidad): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ CrearSede(newSede: Sede): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ModificarCuadrilla(alterCuadrilla: Cuadrilla): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ModificarEmpleado(alterEmpleado: Empleado): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ModificarEventoDeGasto(alterEventoDeGasto: EventoDeGasto): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ModificarLocalidad(alterLocalidad: Localidad): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ModificarSede(alterSede: Sede): ResponseEntity&lt;String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuperRequestControllerRepos1654062064[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuperRequestControllerRepos</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   administradorSedeRepository: AdministradorSedeRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   cuadrillasRepository: CuadrillasRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   empleadosRepository: EmpleadosRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   eventosDeGastoRepository: EventosDeGastoRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   localidadesRepository: LocalidadesRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   perfilesRepository: PerfilesRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sedesRepository: SedesRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   supervisorCuadrillaRepository: SupervisorCuadrillaRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   usuariosRepository: UsuariosRepository [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UsuariosControllerRepos1654062064[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UsuariosControllerRepos</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ CrearUsuario(newUsuario: Usuario): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ModificarUsuario(alterUsuario: Usuario): ResponseEntity&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsuarioById(id: Long): Optional&lt;Usuario&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
SuperRequestControllerRepos1654062064 -> ConsultasController1654062064[arrowhead=none, arrowtail=empty, dir=both];
SuperRequestControllerRepos1654062064 -> RegistrosController1654062064[arrowhead=none, arrowtail=empty, dir=both];
SuperRequestControllerRepos1654062064 -> UsuariosControllerRepos1654062064[arrowhead=none, arrowtail=empty, dir=both];
    
}
@enduml